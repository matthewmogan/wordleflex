{"ast":null,"code":"var _jsxFileName = \"/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/GuessRow/GuessRow.jsx\";\nimport React from \"react\";\nimport \"./GuessRow.css\";\nimport Letter from \"../Letter/Letter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GuessRow(params) {\n  const {\n    id,\n    keywordLetters,\n    boardLetters,\n    boardEvaluated\n  } = params;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    id: id,\n    children: [...Array(keywordLetters).keys()].map(arg => {\n      return /*#__PURE__*/_jsxDEV(Letter, {\n        id: arg\n        // className={boardEvaluated[id][arg]}\n        // value={boardLetters[id][arg]}\n      }, arg, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = GuessRow;\nvar _c;\n$RefreshReg$(_c, \"GuessRow\");","map":{"version":3,"names":["React","Letter","jsxDEV","_jsxDEV","GuessRow","params","id","keywordLetters","boardLetters","boardEvaluated","className","children","Array","keys","map","arg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/GuessRow/GuessRow.jsx"],"sourcesContent":["import React from \"react\"\nimport \"./GuessRow.css\"\nimport Letter from \"../Letter/Letter\"\n\nexport default function GuessRow (params) {\n    const {\n        id, \n        keywordLetters,\n        boardLetters,\n        boardEvaluated\n    } = params\n    return (\n        <div \n            className =\"row\"\n            id = {id}\n        >\n            {[...Array(keywordLetters).keys()].map((arg) => {\n                return(\n                    <Letter\n                        key = {arg}\n                        id = {arg}\n                        // className={boardEvaluated[id][arg]}\n                        // value={boardLetters[id][arg]}\n                    />\n                )\n            })}\n        </div> \n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAAEC,MAAM,EAAE;EACtC,MAAM;IACFC,EAAE;IACFC,cAAc;IACdC,YAAY;IACZC;EACJ,CAAC,GAAGJ,MAAM;EACV,oBACIF,OAAA;IACIO,SAAS,EAAE,KAAK;IAChBJ,EAAE,EAAIA,EAAG;IAAAK,QAAA,EAER,CAAC,GAAGC,KAAK,CAACL,cAAc,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAK;MAC5C,oBACIZ,OAAA,CAACF,MAAM;QAEHK,EAAE,EAAIS;QACN;QACA;MAAA,GAHOA,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAxBuBhB,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}