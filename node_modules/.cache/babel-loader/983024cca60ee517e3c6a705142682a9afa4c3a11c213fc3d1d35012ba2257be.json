{"ast":null,"code":"import React from\"react\";import\"./GuessRow.css\";import Letter from\"../Letter/Letter\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function GuessRow(params){const{id,keywordLetters,boardLetters,boardEvaluated}=params;return/*#__PURE__*/_jsx(\"div\",{className:\"row\",id:id,children:[...Array(keywordLetters).keys()].map(arg=>{if(boardEvaluated[id][arg]===undefined){console.log(boardEvaluated);console.log(\"id:\"+id);console.log(\"arg:\"+arg);console.log(\"result: \"+boardEvaluated[id][arg]);}if(boardLetters[id][arg]===undefined){console.log(boardLetters);console.log(\"id:\"+id);console.log(\"arg:\"+arg);console.log(\"result: \"+boardLetters[id][arg]);}return/*#__PURE__*/_jsx(Letter,{id:arg,evaluation:boardEvaluated[id][arg],letter:boardLetters[id][arg]},arg);})});}","map":{"version":3,"names":["React","Letter","jsx","_jsx","GuessRow","params","id","keywordLetters","boardLetters","boardEvaluated","className","children","Array","keys","map","arg","undefined","console","log","evaluation","letter"],"sources":["/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/GuessRow/GuessRow.jsx"],"sourcesContent":["import React from \"react\"\nimport \"./GuessRow.css\"\nimport Letter from \"../Letter/Letter\"\n\nexport default function GuessRow (params) {\n    const {\n        id, \n        keywordLetters,\n        boardLetters,\n        boardEvaluated\n    } = params\n    return (\n        <div \n            className =\"row\"\n            id = {id}\n        >\n            {[...Array(keywordLetters).keys()].map((arg) => {\n                \n                if(boardEvaluated[id][arg] === undefined){\n                    console.log(boardEvaluated)\n                    console.log(\"id:\" + id)\n                    console.log(\"arg:\" + arg)\n                    console.log(\"result: \" + boardEvaluated[id][arg])\n                }\n                \n                if(boardLetters[id][arg] === undefined){\n                    console.log(boardLetters)\n                    console.log(\"id:\" + id)\n                    console.log(\"arg:\" + arg)\n                    console.log(\"result: \" + boardLetters[id][arg])\n                }\n\n                return(\n                    <Letter\n                        key = {arg}\n                        id = {arg}\n                        evaluation={boardEvaluated[id][arg]}\n                        letter={boardLetters[id][arg]}\n                    />\n                )\n            })}\n        </div> \n    )\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CACvB,MAAO,CAAAC,MAAM,KAAM,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,yBAErC,cAAe,SAAS,CAAAC,QAAQA,CAAEC,MAAM,CAAE,CACtC,KAAM,CACFC,EAAE,CACFC,cAAc,CACdC,YAAY,CACZC,cACJ,CAAC,CAAGJ,MAAM,CACV,mBACIF,IAAA,QACIO,SAAS,CAAE,KAAK,CAChBJ,EAAE,CAAIA,EAAG,CAAAK,QAAA,CAER,CAAC,GAAGC,KAAK,CAACL,cAAc,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,EAAK,CAE5C,GAAGN,cAAc,CAACH,EAAE,CAAC,CAACS,GAAG,CAAC,GAAKC,SAAS,CAAC,CACrCC,OAAO,CAACC,GAAG,CAACT,cAAc,CAAC,CAC3BQ,OAAO,CAACC,GAAG,CAAC,KAAK,CAAGZ,EAAE,CAAC,CACvBW,OAAO,CAACC,GAAG,CAAC,MAAM,CAAGH,GAAG,CAAC,CACzBE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAGT,cAAc,CAACH,EAAE,CAAC,CAACS,GAAG,CAAC,CAAC,CACrD,CAEA,GAAGP,YAAY,CAACF,EAAE,CAAC,CAACS,GAAG,CAAC,GAAKC,SAAS,CAAC,CACnCC,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CACzBS,OAAO,CAACC,GAAG,CAAC,KAAK,CAAGZ,EAAE,CAAC,CACvBW,OAAO,CAACC,GAAG,CAAC,MAAM,CAAGH,GAAG,CAAC,CACzBE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAGV,YAAY,CAACF,EAAE,CAAC,CAACS,GAAG,CAAC,CAAC,CACnD,CAEA,mBACIZ,IAAA,CAACF,MAAM,EAEHK,EAAE,CAAIS,GAAI,CACVI,UAAU,CAAEV,cAAc,CAACH,EAAE,CAAC,CAACS,GAAG,CAAE,CACpCK,MAAM,CAAEZ,YAAY,CAACF,EAAE,CAAC,CAACS,GAAG,CAAE,EAHvBA,GAIV,CAAC,CAEV,CAAC,CAAC,CACD,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}