{"ast":null,"code":"var _jsxFileName = \"/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Gameboard.css\";\nimport { getRandomWord } from \"../../utilities/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  _s();\n  const [keyword, setKeyword] = useState(getRandomWord(3));\n  const [round, setRound] = useState(1);\n  const [guessNumber, setGuessNumber] = useState(1);\n  const [roundState, setRoundState] = useState(1);\n  const [guess, setGuess] = useState(\"\");\n  const [guessHistory, setGuessHistory] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gameboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Gameboard, \"k8+Qv7EnHoURX1DCiMJV6Ksvzyc=\");\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","getRandomWord","jsxDEV","_jsxDEV","Fragment","_Fragment","Gameboard","_s","keyword","setKeyword","round","setRound","guessNumber","setGuessNumber","roundState","setRoundState","guess","setGuess","guessHistory","setGuessHistory","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./Gameboard.css\"; \nimport {getRandomWord} from \"../../utilities/api\"\n\nexport default function Gameboard(){\n\n    const [keyword, setKeyword] = useState(getRandomWord(3))\n    const [round, setRound] = useState(1)\n\n    const [guessNumber, setGuessNumber] = useState(1)\n    const [roundState, setRoundState] = useState(1)\n\n    const [guess, setGuess] = useState(\"\")\n    const [guessHistory, setGuessHistory] = useState(\"\")\n\n    return (\n        <>\n            <h1>Gameboard</h1>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,iBAAiB;AACxB,SAAQC,aAAa,QAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAE/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpD,oBACIG,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACpB,CAAC;AAEX;AAACjB,EAAA,CAhBuBD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}