{"ast":null,"code":"var _jsxFileName = \"/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Gameboard.css\";\nimport { getRandomWord } from \"../../utilities/api\";\nimport { guessRow } from \"../GuessRow/GuessRow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  _s();\n  const [letters, setLetters] = useState(5);\n  const [keyword, setKeyword] = useState(getRandomWord(5));\n  const [guessNumber, setGuessNumber] = useState(1);\n  const [guess, setGuess] = useState(\"\");\n  const [guessHistory, setGuessHistory] = useState(\"\");\n  console.log([...Array(5).keys()]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from({\n        length: 5\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Gameboard, \"Mt2mgPFtSpn0wQrDZI2KbyLCvF8=\");\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","getRandomWord","guessRow","jsxDEV","_jsxDEV","Fragment","_Fragment","Gameboard","_s","letters","setLetters","keyword","setKeyword","guessNumber","setGuessNumber","guess","setGuess","guessHistory","setGuessHistory","console","log","Array","keys","children","from","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./Gameboard.css\"; \nimport {getRandomWord} from \"../../utilities/api\"\nimport {guessRow} from \"../GuessRow/GuessRow\"\n\nexport default function Gameboard(){\n\n    const [letters, setLetters] = useState(5)\n    const [keyword, setKeyword] = useState(getRandomWord(5))\n\n    const [guessNumber, setGuessNumber] = useState(1)\n    const [guess, setGuess] = useState(\"\")\n    \n    const [guessHistory, setGuessHistory] = useState(\"\")\n\n    console.log([...Array(5).keys()])\n\n    return (\n        <>\n            <div>\n                \n                {\n                    Array.from({length:5})\n                }\n            \n            </div>\n            \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,iBAAiB;AACxB,SAAQC,aAAa,QAAO,qBAAqB;AACjD,SAAQC,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAE/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;EAExD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpDmB,OAAO,CAACC,GAAG,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAEjC,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACInB,OAAA;MAAAmB,QAAA,EAGQF,KAAK,CAACG,IAAI,CAAC;QAACC,MAAM,EAAC;MAAC,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGzB;EAAC,gBAER,CAAC;AAEX;AAACrB,EAAA,CAxBuBD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}