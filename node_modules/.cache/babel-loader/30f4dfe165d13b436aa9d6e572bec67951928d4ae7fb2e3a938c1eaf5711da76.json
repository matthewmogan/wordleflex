{"ast":null,"code":"var _jsxFileName = \"/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Gameboard.css\";\nimport { getRandomWord } from \"../../utilities/api\";\nimport { GuessRow } from \"../GuessRow/GuessRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  _s();\n  const [letters, setLetters] = useState(5);\n  // minimum 3, maximum 8 - letters in the keyword\n  const [keyword, setKeyword] = useState(getRandomWord(5));\n  // this is the word the player is guessing\n  const [guessNumber, setGuessNumber] = useState(1);\n  // this tracks which guess we are on in the game. used to update the guess rows once evaluated, and \n  const [guess, setGuess] = useState(\"\");\n  // the guess that the player enters, gets updated by the guess form\n  const [guessHistory, setGuessHistory] = useState(\"\");\n  // running tally of the guesses across the whole round\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [...Array(5).keys()].map(arg => {\n      /*#__PURE__*/_jsxDEV(GuessRow, {\n        id: arg,\n        guessNumber: guessNumber,\n        guess: guess,\n        className: \"inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Gameboard, \"Mt2mgPFtSpn0wQrDZI2KbyLCvF8=\");\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","getRandomWord","GuessRow","jsxDEV","_jsxDEV","Gameboard","_s","letters","setLetters","keyword","setKeyword","guessNumber","setGuessNumber","guess","setGuess","guessHistory","setGuessHistory","children","Array","keys","map","arg","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattmogan/Desktop/Projects/WordleFlex/src/components/Gameboard/Gameboard.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./Gameboard.css\"; \nimport {getRandomWord} from \"../../utilities/api\"\nimport {GuessRow} from \"../GuessRow/GuessRow\"\n\nexport default function Gameboard(){\n    const [letters, setLetters] = useState(5) \n    // minimum 3, maximum 8 - letters in the keyword\n    const [keyword, setKeyword] = useState(getRandomWord(5)) \n    // this is the word the player is guessing\n    const [guessNumber, setGuessNumber] = useState(1) \n    // this tracks which guess we are on in the game. used to update the guess rows once evaluated, and \n    const [guess, setGuess] = useState(\"\")    \n    // the guess that the player enters, gets updated by the guess form\n    const [guessHistory, setGuessHistory] = useState(\"\")\n    // running tally of the guesses across the whole round\n    return (\n        <div>    \n           {[...Array(5).keys()].map((arg) => {\n            <GuessRow\n                id = {arg}\n                guessNumber={guessNumber}\n                guess={guess}\n                className=\"inactive\" \n            />\n           })}\n        </div>  \n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,iBAAiB;AACxB,SAAQC,aAAa,QAAO,qBAAqB;AACjD,SAAQC,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;EACxD;EACA,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,oBACII,OAAA;IAAAa,QAAA,EACI,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAK;MAClC,aAAAjB,OAAA,CAACF,QAAQ;QACLoB,EAAE,EAAID,GAAI;QACVV,WAAW,EAAEA,WAAY;QACzBE,KAAK,EAAEA,KAAM;QACbU,SAAS,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IACH,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACrB,EAAA,CAvBuBD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}